 /*public void histShiffting(ref Iimage img)
        {
            int n = 0;
            Rectangle rect = new Rectangle(0, 0, img.Image.Width, img.Image.Height);
            BitmapData bmpData = img.Image.LockBits(rect, ImageLockMode.ReadWrite, img.Image.PixelFormat);

            IntPtr ptr = bmpData.Scan0;

            int bytes = Math.Abs(bmpData.Stride) * img.Image.Height;
            byte[] rgbValues = new byte[bytes];


            Marshal.Copy(ptr, rgbValues, 0, bytes);

            for (int i = 0; i < rgbValues.Length; i += 4)
            {
                byte pixelValue = (byte)((rgbValues[i] + rgbValues[i + 1] + rgbValues[i + 2]) / 3);
                if (pixelValue == 254 && L[n].Equals("1"))
                {
                    rgbValues[i] = 255; rgbValues[i + 1] = rgbValues[i + 2] = 255;
                    n++;
                }
                else if (pixelValue == 1 && L[n].Equals("1"))
                {
                    rgbValues[i] = 0; rgbValues[i + 1] = rgbValues[i + 2] = 0;
                    n++;
                }
                else if ((pixelValue == 1) || (pixelValue == 254))
                {
                    n++;
                }
            }
            Marshal.Copy(rgbValues, 0, ptr, bytes);


            img.Image.UnlockBits(bmpData);
        }*/